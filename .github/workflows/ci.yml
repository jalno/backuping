name: Test and Build Backuping

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  TARGET_PHP_VERSION: 7.4
  GITLAB_KNOWN_HOST: |
    git.jeyserver.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC+Xhcnp8pJ6a0BuFe7MiBTVwticsJHsMkwAOo2vXs0XNrbFu3CToHNh0r7zywXSLOgNwxRM52xyCi6/844Xh3Coza/GfR/7S3bN47tDmR8nPhhrcZbKDsVnpBrNFEIkRLp9sCb4Uu+xabAdewvOvS3FJvfuHL8xnwUXcNdWR7ot9dgqNywg23x40b8EBzEZhDToSYZm0wgtX4Y1BzCa7vff4eCygZA6vD6yr88eJsTXHBywiqpqpXEPaQ815ajzdUNv4Q2ZLi3Avt10DfEmGr+l93ZxHDkb0/Gh4+jotsXo2TJ04KnFkHsTXi2LFeXeXsCmI8eQQOBNGel4JP0aIQl7xP5Weytukg2WI8rOOvqRsS5gKI2hz+deEXEqSg14w33/DhVyij5vGv7afNKu8Df2S36ROuB6nHBY9GMur/sM2kkbvHmaWsZIAhnK1Bmz6oxfKNxue01LBWZzXDPWwFLQzYoaalZWYz6mjuQzidX0cgD8I97/sBJQgIxmwFCFvs=
    git.jeyserver.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBH8kqdVFHBUbGR1nCqvZnkh1Z39Xq15KxHxg6xQT3b4G28WAw7t5cWR9DcrGmGSPIdNWeFEhyn/c3azt2LO2868=
    git.jeyserver.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIN1PDZEczwMyJs3dLAkeBN5jVFgPspJsoWXYIy2Rr47W

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          path: base/packages/backuping

      - run: pwd
      - run: ls -lh base
      - run: ls -lh base/packages

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.TARGET_PHP_VERSION }}

      - name: Validate backuping package.json
        run: php -r 'json_decode(file_get_contents("./base/packages/backuping/package.json"), false, 512, JSON_THROW_ON_ERROR);'

      - name: Validate Lang file langs/en_US.json
        run: php -r 'json_decode(file_get_contents("./base/packages/backuping/langs/en_US.json"), false, 512, JSON_THROW_ON_ERROR);'

      - name: Validate Lang file langs/fa_IR.json
        run: php -r 'json_decode(file_get_contents("base/packages/backuping/langs/fa_IR.json"), false, 512, JSON_THROW_ON_ERROR);'

      - name: Install Dependencies For PHPStan
        uses: ./base/packages/backuping/.github/actions/install-dependencies
        with:
          GITLAB_PRIVATE_KEY: ${{ secrets.GITLAB_PRIVATE_KEY }}
          GITLAB_KNOWN_HOST: ${{ env.GITLAB_KNOWN_HOST }}

      - name: Checkout jalno/cronjob
        uses: actions/checkout@v3
        with:
          repository: jalno/cronjob
          path: base/packages/cronjob

      - run: ls -lh base
      - run: ls -lh base/packages

      - name: PHPStan
        uses: php-actions/phpstan@v3
        env:
          GITLAB_KNOWN_HOST: ''
        with:
          php_version: ${{ env.TARGET_PHP_VERSION }}
          path: base/packages/backuping/
          configuration: base/packages/backuping/phpstan.neon
          php_extensions: mbstring
          memory_limit: 512M

  build:
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          path: base/packages/backuping

      - name: Install Dependencies
        uses: ./base/packages/backuping/.github/actions/install-dependencies
        with:
          GITLAB_KNOWN_HOST: ${{ env.GITLAB_KNOWN_HOST }}
          GITLAB_PRIVATE_KEY: ${{ secrets.GITLAB_PRIVATE_KEY }}
          STABLE_DEPENDENCIES: 'true'

      - name: Checkout jalno/dockerize
        uses: actions/checkout@v3
        with:
          repository: jalno/dockerize
          path: base/packages/dockerize

      - run: cp base/packages/dockerize/.dockerignore base/.

      - run: rm -fr base/packages/cronjob
      - run: ls -lh base/packages

      - name: Log into registry ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          file: ./base/packages/backuping/Dockerfile
          context: base/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
